{"version":3,"file":"gpt.min.js","sources":["../src/gpt.js"],"sourcesContent":["import $ from 'jquery';\nimport ajax from 'core/ajax';\n\nexport const init = () => {\n    get_response();\n    page_unload();\n};\n\n/**\n * Delete a content\n */\nfunction get_response() {\n\n    $(\"#submit-question\").off();\n    $(\"#submit-question\").on('click', function () {\n        // rest statistics\n        $('#cria-conversation').html('');\n        $('#cria-prompt-tokens').html(0);\n        $('#cria-completion-tokens').html(0);\n        $('#cria-total-tokens').html(0);\n        $('#cria-cost').html('$0.00');\n\n        var bot_id = $(this).data('bot_id');\n        var prompt =\n            $('#default-user-prompt').val() +\n            $('#user-prompt').val();\n        var content =\n            $('#cria-test-input').val();\n        var chat_id = $('#cria-chat-id').val();\n        // COnvert chat_id to string\n        if (chat_id == 0) {\n            chat_id = 'none';\n        }\n        $(\"#submit-question\").hide();\n        $(\"#starting-process\").show();\n        //Delete the record\n        var gpt_response = ajax.call([{\n            methodname: 'cria_get_gpt_response',\n            args: {\n                bot_id: bot_id,\n                chat_id: chat_id,\n                prompt: prompt,\n                content: content\n            }\n        }]);\n\n        gpt_response[0].done(function (result) {\n            console.log(result);\n            let json = JSON.parse(result.stacktrace);\n            $(\"#submit-question\").show();\n            $(\"#starting-process\").hide();\n            $('#cria-conversation').append().html(`${result.message}`);\n            $('#cria-prompt-tokens').html(result.prompt_tokens);\n            $('#cria-completion-tokens').html(result.completion_tokens);\n            $('#cria-total-tokens').html(result.total_tokens);\n            $('#cria-cost').html('$' + result.cost.toPrecision(6));\n            $('#stacktrace').html('<pre>' + JSON.stringify(json, null, '\\t') + '</pre>');\n            $('#cria-file-name').html(result.file_name);\n        }).fail(function (e) {\n            alert(e.message + ' Your prompt contains unsupported characters. ' +\n                'Please try again.');\n            location.reload();\n        });\n    });\n}\n\nfunction page_unload() {\n    window.addEventListener('beforeunload', function (e) {\n        e.preventDefault();\n        e.returnValue = '';\n        alert('Please wait for the process to complete.');\n\n    });\n}"],"names":["off","on","html","bot_id","this","data","prompt","val","content","chat_id","hide","show","ajax","call","methodname","args","done","result","console","log","json","JSON","parse","stacktrace","append","message","prompt_tokens","completion_tokens","total_tokens","cost","toPrecision","stringify","file_name","fail","e","alert","location","reload","window","addEventListener","preventDefault","returnValue"],"mappings":"oVAGoB,yBAUd,oBAAoBA,0BACpB,oBAAoBC,GAAG,SAAS,+BAE5B,sBAAsBC,KAAK,wBAC3B,uBAAuBA,KAAK,uBAC5B,2BAA2BA,KAAK,uBAChC,sBAAsBA,KAAK,uBAC3B,cAAcA,KAAK,aAEjBC,QAAS,mBAAEC,MAAMC,KAAK,UACtBC,QACA,mBAAE,wBAAwBC,OAC1B,mBAAE,gBAAgBA,MAClBC,SACA,mBAAE,oBAAoBD,MACtBE,SAAU,mBAAE,iBAAiBF,MAElB,GAAXE,UACAA,QAAU,4BAEZ,oBAAoBC,2BACpB,qBAAqBC,OAEJC,cAAKC,KAAK,CAAC,CAC1BC,WAAY,wBACZC,KAAM,CACFZ,OAAQA,OACRM,QAASA,QACTH,OAAQA,OACRE,QAASA,YAIJ,GAAGQ,MAAK,SAAUC,QAC3BC,QAAQC,IAAIF,YACRG,KAAOC,KAAKC,MAAML,OAAOM,gCAC3B,oBAAoBZ,2BACpB,qBAAqBD,2BACrB,sBAAsBc,SAAStB,eAAQe,OAAOQ,8BAC9C,uBAAuBvB,KAAKe,OAAOS,mCACnC,2BAA2BxB,KAAKe,OAAOU,uCACvC,sBAAsBzB,KAAKe,OAAOW,kCAClC,cAAc1B,KAAK,IAAMe,OAAOY,KAAKC,YAAY,wBACjD,eAAe5B,KAAK,QAAUmB,KAAKU,UAAUX,KAAM,KAAM,MAAQ,8BACjE,mBAAmBlB,KAAKe,OAAOe,cAClCC,MAAK,SAAUC,GACdC,MAAMD,EAAET,QAAFS,mEAENE,SAASC,eAMjBC,OAAOC,iBAAiB,gBAAgB,SAAUL,GAC9CA,EAAEM,iBACFN,EAAEO,YAAc,GAChBN,MAAM"}