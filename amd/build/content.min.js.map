{"version":3,"file":"content.min.js","sources":["../src/content.js"],"sourcesContent":["import $ from 'jquery';\nimport notification from 'core/notification';\nimport ajax from 'core/ajax';\n\nexport const init = () => {\n    delete_content();\n    delete_question();\n    edit_intent();\n    select_deselect_questions();\n    publish_questions();\n    delete_all_questions();\n    publish_all_documents();\n    publish_urls();\n};\n\n\n/**\n * This function deletes a specific content when an element with the class 'delete-content' is clicked.\n * It sends an AJAX call to the 'cria_content_delete' method and handles the response, reloading the page if successful or displaying an error message if failed.\n */\nfunction delete_content() {\n    $(\".delete-content\").off();\n    $(\".delete-content\").on('click', function () {\n        var id = $(this).data('id');\n\n        notification.confirm('Delete',\n            'Are you sure you want to delete this content? It cannot be recovered',\n            'Delete',\n            M.util.get_string('cancel', 'local_cria'), function () {\n                //Delete the record\n                var delete_content = ajax.call([{\n                    methodname: 'cria_content_delete',\n                    args: {\n                        id: id\n                    }\n                }]);\n\n                delete_content[0].done(function ($result) {\n                    if ($result == 200) {\n                        location.reload();\n                    } else {\n                        alert($result + ' The file could not be found on the criadex server. However, the database link to the file has been deleted.');\n                        location.reload();\n                    }\n                }).fail(function () {\n                    alert('An error has occurred. The record was not deleted');\n                });\n            });\n\n    });\n}\n\n/**\n * This function redirects the user to the 'edit_intent.php' page when an element with the class 'btn-edit-intent' is clicked.\n * It retrieves the 'id' and 'bot_id' from the clicked element and the '#bot-id' input field respectively, and includes them as parameters in the URL.\n */\nfunction edit_intent() {\n    $(\".btn-edit-intent\").off();\n    $(\".btn-edit-intent\").on('click', function () {\n        var id = $(this).data('id');\n        var bot_id = $('#bot-id').val();\n        // Hyperlink to edit_intent.php\n        window.location.href = M.cfg.wwwroot + '/local/cria/edit_intent.php?id=' + id + '&bot_id=' + bot_id;\n    });\n}\n\n/**\n * This function deletes a specific question when an element with the class 'delete-question' is clicked.\n * It sends an AJAX call to the 'cria_question_delete' method and handles the response, reloading the page if successful or displaying an error message if failed.\n */\nfunction delete_question() {\n    $(\".delete-question\").off();\n    $(\".delete-question\").on('click', function () {\n        var id = $(this).data('id');\n        notification.confirm('Delete',\n            'Are you sure you want to delete this question? The question and all examples cannot be recovered.',\n            'Delete',\n            M.util.get_string('cancel', 'local_cria'), function () {\n                //Delete the record\n                var delete_content = ajax.call([{\n                    methodname: 'cria_question_delete',\n                    args: {\n                        id: id\n                    }\n                }]);\n\n                delete_content[0].done(function ($result) {\n                    location.reload();\n                }).fail(function () {\n                    alert('An error occured, the question could not be deleted.');\n                });\n            });\n\n    });\n}\n\n/**\n * This function selects or deselects all questions when the elements with ids 'select-all-questions' and 'deselect-all-questions' are clicked respectively.\n * It manipulates the 'checked' property of all checkboxes with the class 'question-select'.\n */\nfunction select_deselect_questions() {\n    $('#select-all-questions').off();\n    $('#select-all-questions').click(function () {\n        $('input:checkbox.question-select').prop('checked', true);\n    });\n\n    $('#deselect-all-questions').click(function () {\n        $('input:checkbox.question-select').prop('checked', false);\n    });\n}\n\n/**\n * This function publishes selected questions when an element with the class 'publish-questions' is clicked.\n * It sends an AJAX call to the 'cria_question_publish' method for each selected question, removing the question from the page if successful or displaying an error message if failed.\n */\nfunction publish_questions() {\n    $('.publish-questions').off();\n    $('.publish-questions').click(function () {\n        $('input:checkbox.question-select:checked').each(function () {\n            let input = $(this);\n            var publish_questions = ajax.call([{\n                methodname: 'cria_question_publish',\n                args: {\n                    id: $(this).data('id')\n                }\n            }]);\n            publish_questions[0].done(function ($result) {\n                if ($result == true) {\n                    input.remove();\n                } else {\n                    alert($result);\n                }\n            }).fail(function (e) {\n                console.log(e);\n                alert('An error occured, the question could not be published.');\n            });\n        });\n    });\n}\n\n/**\n * This function deletes all questions related to a specific intent when an element with the class 'delete-all-questions' is clicked.\n * It sends an AJAX call to the 'cria_question_delete_all' method and handles the response, reloading the page if successful or displaying an error message if failed.\n */\nfunction delete_all_questions() {\n    $('.delete-all-questions').off();\n    $('.delete-all-questions').click(function () {\n        let intent_id = $(this).data('intent_id');\n        notification.confirm('Delete',\n            'Are you sure you want to delete all questions for this category? The questions and all examples cannot be recovered.',\n            'Delete',\n            M.util.get_string('cancel', 'local_cria'), function () {\n                //Delete all records\n                var delete_all_questions = ajax.call([{\n                    methodname: 'cria_question_delete_all',\n                    args: {\n                        \"intent_id\": intent_id\n                    }\n                }]);\n                delete_all_questions[0].done(function ($result) {\n                    if ($result == 200) {\n                        location.reload();\n                    } else {\n                        alert('An error occured, the questions could not be deleted.');\n                    }\n                }).fail(function (e) {\n                    console.log(e);\n                    alert('An error occured, the questions could not be deleted.');\n                });\n            });\n    });\n}\n\n/**\n * This function triggers the publishing of all documents related to a specific intent when the element with the id 'cria-publish-all-files' is clicked.\n * It sends an AJAX call to the 'cria_content_publish_files' method and handles the response, updating the HTML of the clicked element based on the success or failure of the AJAX call.\n */\nfunction publish_all_documents() {\n    $('#cria-publish-all-files').click(function () {\n        $(this).html('');\n        $(this).html('<i class=\"bi bi-arrow-repeat gly-spin\"></i>');\n        var intent_id = $(this).data('intent_id');\n        console.log(intent_id);\n        var publish_files = ajax.call([{\n            methodname: 'cria_content_publish_files',\n            args: {\n                intent_id: intent_id\n            }\n        }]);\n        publish_files[0].done(function ($result) {\n            $('#cria-publish-all-files').html('<i class=\"bi bi-cloud-upload\"></i>');\n        }).fail(function (e) {\n            console.log(e);\n            alert('An error occured, the question could not be published.');\n        });\n\n    });\n}\n\n/**\n * This function publishes URLs when the element with the id 'btn-cria-save-urls' is clicked.\n * It retrieves the URLs from the '#local-cria-urls' textarea and the 'intent_id' from the clicked element, sends an AJAX call to the 'cria_content_publish_urls' method with these as parameters, and handles the response, reloading the page if successful or displaying an error message if failed.\n */\nfunction publish_urls() {\n    $('#btn-cria-save-urls').on('click', function () {\n        var urls = $('#local-cria-urls').val();\n        var intent_id = $(this).data('intent_id');\n        var publish_urls = ajax.call([{\n            methodname: 'cria_content_publish_urls',\n            args: {\n                urls: urls,\n                intent_id: intent_id\n            }\n        }]);\n        publish_urls[0].done(function ($result) {\n            location.reload();\n        }).fail(function (e) {\n                console.log(e);\n                alert('An error occured, the URLs could not be published.');\n            }\n        );\n    });\n}"],"names":["off","on","id","this","data","confirm","M","util","get_string","ajax","call","methodname","args","done","$result","alert","location","reload","fail","bot_id","val","window","href","cfg","wwwroot","click","prop","each","input","remove","e","console","log","intent_id","html","urls"],"mappings":"8aAIoB,yBAiBd,mBAAmBA,0BACnB,mBAAmBC,GAAG,SAAS,eACzBC,IAAK,mBAAEC,MAAMC,KAAK,4BAETC,QAAQ,SACjB,uEACA,SACAC,EAAEC,KAAKC,WAAW,SAAU,eAAe,WAElBC,cAAKC,KAAK,CAAC,CAC5BC,WAAY,sBACZC,KAAM,CACFV,GAAIA,OAIG,GAAGW,MAAK,SAAUC,SACd,KAAXA,SAGAC,MAAMD,QAAU,gHAFhBE,SAASC,YAKdC,MAAK,WACJH,MAAM,kFA0BpB,oBAAoBf,0BACpB,oBAAoBC,GAAG,SAAS,eAC1BC,IAAK,mBAAEC,MAAMC,KAAK,4BACTC,QAAQ,SACjB,oGACA,SACAC,EAAEC,KAAKC,WAAW,SAAU,eAAe,WAElBC,cAAKC,KAAK,CAAC,CAC5BC,WAAY,uBACZC,KAAM,CACFV,GAAIA,OAIG,GAAGW,MAAK,SAAUC,SAC7BE,SAASC,YACVC,MAAK,WACJH,MAAM,qFAhCpB,oBAAoBf,0BACpB,oBAAoBC,GAAG,SAAS,eAC1BC,IAAK,mBAAEC,MAAMC,KAAK,MAClBe,QAAS,mBAAE,WAAWC,MAE1BC,OAAOL,SAASM,KAAOhB,EAAEiB,IAAIC,QAAU,kCAAoCtB,GAAK,WAAaiB,8BAuC/F,yBAAyBnB,0BACzB,yBAAyByB,OAAM,+BAC3B,kCAAkCC,KAAK,WAAW,0BAGtD,2BAA2BD,OAAM,+BAC7B,kCAAkCC,KAAK,WAAW,0BAStD,sBAAsB1B,0BACtB,sBAAsByB,OAAM,+BACxB,0CAA0CE,MAAK,eACzCC,OAAQ,mBAAEzB,MACUM,cAAKC,KAAK,CAAC,CAC/BC,WAAY,wBACZC,KAAM,CACFV,IAAI,mBAAEC,MAAMC,KAAK,UAGP,GAAGS,MAAK,SAAUC,SACjB,GAAXA,QACAc,MAAMC,SAENd,MAAMD,YAEXI,MAAK,SAAUY,GACdC,QAAQC,IAAIF,GACZf,MAAM,uFAWhB,yBAAyBf,0BACzB,yBAAyByB,OAAM,eACzBQ,WAAY,mBAAE9B,MAAMC,KAAK,mCAChBC,QAAQ,SACjB,uHACA,SACAC,EAAEC,KAAKC,WAAW,SAAU,eAAe,WAEZC,cAAKC,KAAK,CAAC,CAClCC,WAAY,2BACZC,KAAM,WACWqB,cAGA,GAAGpB,MAAK,SAAUC,SACpB,KAAXA,QACAE,SAASC,SAETF,MAAM,4DAEXG,MAAK,SAAUY,GACdC,QAAQC,IAAIF,GACZf,MAAM,sFAWpB,2BAA2BU,OAAM,+BAC7BtB,MAAM+B,KAAK,wBACX/B,MAAM+B,KAAK,mDACTD,WAAY,mBAAE9B,MAAMC,KAAK,aAC7B2B,QAAQC,IAAIC,WACQxB,cAAKC,KAAK,CAAC,CAC3BC,WAAY,6BACZC,KAAM,CACFqB,UAAWA,cAGL,GAAGpB,MAAK,SAAUC,6BAC1B,2BAA2BoB,KAAK,yCACnChB,MAAK,SAAUY,GACdC,QAAQC,IAAIF,GACZf,MAAM,oFAWZ,uBAAuBd,GAAG,SAAS,eAC7BkC,MAAO,mBAAE,oBAAoBf,MAC7Ba,WAAY,mBAAE9B,MAAMC,KAAK,aACVK,cAAKC,KAAK,CAAC,CAC1BC,WAAY,4BACZC,KAAM,CACFuB,KAAMA,KACNF,UAAWA,cAGN,GAAGpB,MAAK,SAAUC,SAC3BE,SAASC,YACVC,MAAK,SAAUY,GACVC,QAAQC,IAAIF,GACZf,MAAM"}