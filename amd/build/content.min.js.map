{"version":3,"file":"content.min.js","sources":["../src/content.js"],"sourcesContent":["import $ from 'jquery';\nimport notification from 'core/notification';\nimport ajax from 'core/ajax';\n\nexport const init = () => {\n    delete_question();\n    select_deselect_questions();\n    publish_questions();\n    delete_all_questions();\n};\n\n\n\n/**\n * This function redirects the user to the 'edit_intent.php' page when an element with the class 'btn-edit-intent' is clicked.\n * It retrieves the 'id' and 'bot_id' from the clicked element and the '#bot-id' input field respectively, and includes them as parameters in the URL.\n */\nfunction edit_intent() {\n    $(\".btn-edit-intent\").off();\n    $(\".btn-edit-intent\").on('click', function () {\n        var id = $(this).data('id');\n        var bot_id = $('#bot-id').val();\n        // Hyperlink to edit_intent.php\n        window.location.href = M.cfg.wwwroot + '/local/cria/edit_intent.php?id=' + id + '&bot_id=' + bot_id;\n    });\n}\n\n/**\n * This function deletes a specific question when an element with the class 'delete-question' is clicked.\n * It sends an AJAX call to the 'cria_question_delete' method and handles the response, reloading the page if successful or displaying an error message if failed.\n */\nfunction delete_question() {\n    $(\".delete-question\").off();\n    $(\".delete-question\").on('click', function () {\n        var id = $(this).data('id');\n        notification.confirm('Delete',\n            'Are you sure you want to delete this question? The question and all examples cannot be recovered.',\n            'Delete',\n            M.util.get_string('cancel', 'local_cria'), function () {\n                //Delete the record\n                var delete_content = ajax.call([{\n                    methodname: 'cria_question_delete',\n                    args: {\n                        id: id\n                    }\n                }]);\n\n                delete_content[0].done(function ($result) {\n                    location.reload();\n                }).fail(function () {\n                    alert('An error occured, the question could not be deleted.');\n                });\n            });\n\n    });\n}\n\n/**\n * This function selects or deselects all questions when the elements with ids 'select-all-questions' and 'deselect-all-questions' are clicked respectively.\n * It manipulates the 'checked' property of all checkboxes with the class 'question-select'.\n */\nfunction select_deselect_questions() {\n    // When select-questions element is clicked, verify if it is checked.\n    // If it is, select all questions, otherwise deselect all questions.\n    $('#select-questions').off();\n    $('#select-questions').click(function () {\n        if ($(this).prop('checked')) {\n            $('.question-select').prop('checked', true);\n        } else {\n            $('.question-select').prop('checked', false);\n        }\n    });\n}\n\n/**\n * This function publishes selected questions when an element with the class 'publish-questions' is clicked.\n * It sends an AJAX call to the 'cria_question_publish' method for each selected question, removing the question from the page if successful or displaying an error message if failed.\n */\nfunction publish_questions() {\n    $('.publish-questions').off();\n    $('.publish-questions').click(function () {\n        $('input:checkbox.question-select:checked').each(function () {\n            let input = $(this);\n            var publish_questions = ajax.call([{\n                methodname: 'cria_question_publish',\n                args: {\n                    id: $(this).data('id')\n                }\n            }]);\n            publish_questions[0].done(function ($result) {\n                if ($result == true) {\n                    input.remove();\n                } else {\n                    alert($result);\n                }\n            }).fail(function (e) {\n                console.log(e);\n                alert('An error occured, the question could not be published.');\n            });\n        });\n    });\n}\n\n/**\n * This function deletes all questions related to a specific intent when an element with the class 'delete-all-questions' is clicked.\n * It sends an AJAX call to the 'cria_question_delete_all' method and handles the response, reloading the page if successful or displaying an error message if failed.\n */\nfunction delete_all_questions() {\n    $('.delete-all-questions').off();\n    $('.delete-all-questions').click(function () {\n        let intent_id = $(this).data('intent_id');\n        notification.confirm('Delete',\n            'Are you sure you want to delete all questions for this category? The questions and all examples cannot be recovered.',\n            'Delete',\n            M.util.get_string('cancel', 'local_cria'), function () {\n                //Delete all records\n                var delete_all_questions = ajax.call([{\n                    methodname: 'cria_question_delete_all',\n                    args: {\n                        \"intent_id\": intent_id\n                    }\n                }]);\n                delete_all_questions[0].done(function ($result) {\n                    if ($result == 200) {\n                        location.reload();\n                    } else {\n                        alert('An error occured, the questions could not be deleted.');\n                    }\n                }).fail(function (e) {\n                    console.log(e);\n                    alert('An error occured, the questions could not be deleted.');\n                });\n            });\n    });\n}"],"names":["off","on","id","this","data","confirm","M","util","get_string","ajax","call","methodname","args","done","$result","location","reload","fail","alert","click","prop","each","input","remove","e","console","log","intent_id"],"mappings":"8aAIoB,yBA4Bd,oBAAoBA,0BACpB,oBAAoBC,GAAG,SAAS,eAC1BC,IAAK,mBAAEC,MAAMC,KAAK,4BACTC,QAAQ,SACjB,oGACA,SACAC,EAAEC,KAAKC,WAAW,SAAU,eAAe,WAElBC,cAAKC,KAAK,CAAC,CAC5BC,WAAY,uBACZC,KAAM,CACFV,GAAIA,OAIG,GAAGW,MAAK,SAAUC,SAC7BC,SAASC,YACVC,MAAK,WACJC,MAAM,qFAcpB,qBAAqBlB,0BACrB,qBAAqBmB,OAAM,YACrB,mBAAEhB,MAAMiB,KAAK,+BACX,oBAAoBA,KAAK,WAAW,uBAEpC,oBAAoBA,KAAK,WAAW,0BAU5C,sBAAsBpB,0BACtB,sBAAsBmB,OAAM,+BACxB,0CAA0CE,MAAK,eACzCC,OAAQ,mBAAEnB,MACUM,cAAKC,KAAK,CAAC,CAC/BC,WAAY,wBACZC,KAAM,CACFV,IAAI,mBAAEC,MAAMC,KAAK,UAGP,GAAGS,MAAK,SAAUC,SACjB,GAAXA,QACAQ,MAAMC,SAENL,MAAMJ,YAEXG,MAAK,SAAUO,GACdC,QAAQC,IAAIF,GACZN,MAAM,uFAWhB,yBAAyBlB,0BACzB,yBAAyBmB,OAAM,eACzBQ,WAAY,mBAAExB,MAAMC,KAAK,mCAChBC,QAAQ,SACjB,uHACA,SACAC,EAAEC,KAAKC,WAAW,SAAU,eAAe,WAEZC,cAAKC,KAAK,CAAC,CAClCC,WAAY,2BACZC,KAAM,WACWe,cAGA,GAAGd,MAAK,SAAUC,SACpB,KAAXA,QACAC,SAASC,SAETE,MAAM,4DAEXD,MAAK,SAAUO,GACdC,QAAQC,IAAIF,GACZN,MAAM"}