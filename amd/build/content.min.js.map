{"version":3,"file":"content.min.js","sources":["../src/content.js"],"sourcesContent":["import $ from 'jquery';\nimport notification from 'core/notification';\nimport ajax from 'core/ajax';\n\nexport const init = () => {\n    delete_content();\n    delete_question();\n    edit_intent();\n    select_deselect_questions();\n    publish_questions();\n};\n\n\n/**\n * Delete a content\n */\nfunction delete_content() {\n\n    $(\".delete-content\").off();\n    $(\".delete-content\").on('click', function () {\n        var id = $(this).data('id');\n\n        notification.confirm('Delete',\n            'Are you sure you want to delete this content? It cannot be recovered',\n            'Delete',\n            M.util.get_string('cancel', 'local_cria'), function () {\n                //Delete the record\n                var delete_content = ajax.call([{\n                    methodname: 'cria_content_delete',\n                    args: {\n                        id: id\n                    }\n                }]);\n\n                delete_content[0].done(function ($result) {\n                    if ($result == 200) {\n                        location.reload();\n                    } else {\n                        alert($result + ' The file could not be found on the criadex server. However, the database link to the file has been deleted.');\n                        location.reload();\n                    }\n                }).fail(function () {\n                    alert('An error has occurred. The record was not deleted');\n                });\n            });\n\n    });\n}\n\n/**\n * Edit an intent\n */\nfunction edit_intent() {\n    $(\".btn-edit-intent\").off();\n    $(\".btn-edit-intent\").on('click', function () {\n        var id = $(this).data('id');\n        var bot_id = $('#bot-id').val();\n        // Hyperlink to edit_intent.php\n        window.location.href = M.cfg.wwwroot + '/local/cria/edit_intent.php?id=' + id + '&bot_id=' + bot_id;\n    });\n}\n\n/**\n * Delete quetison\n */\nfunction delete_question() {\n\n    $(\".delete-question\").off();\n    $(\".delete-question\").on('click', function () {\n        var id = $(this).data('id');\n        notification.confirm('Delete',\n            'Are you sure you want to delete this question? The question and all examples cannot be recovered.',\n            'Delete',\n            M.util.get_string('cancel', 'local_cria'), function () {\n                //Delete the record\n                var delete_content = ajax.call([{\n                    methodname: 'cria_question_delete',\n                    args: {\n                        id: id\n                    }\n                }]);\n\n                delete_content[0].done(function ($result) {\n                    if ($result == '200') {\n                        location.reload();\n                    } else {\n                        alert($result);\n                    }\n                }).fail(function () {\n                    alert('An error occured, the question could not be deleted.');\n                });\n            });\n\n    });\n}\n\nfunction select_deselect_questions() {\n    $('#select-all-questions').off();\n    $('#select-all-questions').click(function () {\n        $('input:checkbox.question-select').prop('checked', true);\n    });\n\n    $('#deselect-all-questions').click(function () {\n        $('input:checkbox.question-select').prop('checked', false);\n    });\n}\n\nfunction publish_questions() {\n    $('.publish-questions').off();\n    $('.publish-questions').click(function () {\n        $(this).text('Publishing question(s)...');\n        $('input:checkbox.question-select:checked').each(function () {\n            console.log($(this).data('id'));\n            var publish_questions = ajax.call([{\n                methodname: 'cria_question_publish',\n                args: {\n                    id: $(this).data('id')\n                }\n            }]);\n            publish_questions[0].done(function ($result) {\n                if ($result == true) {\n\n                } else {\n                    alert($result);\n                }\n            }).fail(function (e) {\n                console.log(e);\n                alert('An error occured, the question could not be published.');\n            });\n\n        });\n\n        $(this).text('Publish questions');\n    });\n}"],"names":["off","on","id","this","data","confirm","M","util","get_string","ajax","call","methodname","args","done","$result","alert","location","reload","fail","bot_id","val","window","href","cfg","wwwroot","click","prop","text","each","console","log","e"],"mappings":"8aAIoB,yBAcd,mBAAmBA,0BACnB,mBAAmBC,GAAG,SAAS,eACzBC,IAAK,mBAAEC,MAAMC,KAAK,4BAETC,QAAQ,SACjB,uEACA,SACAC,EAAEC,KAAKC,WAAW,SAAU,eAAe,WAElBC,cAAKC,KAAK,CAAC,CAC5BC,WAAY,sBACZC,KAAM,CACFV,GAAIA,OAIG,GAAGW,MAAK,SAAUC,SACd,KAAXA,SAGAC,MAAMD,QAAU,gHAFhBE,SAASC,YAKdC,MAAK,WACJH,MAAM,kFAyBpB,oBAAoBf,0BACpB,oBAAoBC,GAAG,SAAS,eAC1BC,IAAK,mBAAEC,MAAMC,KAAK,4BACTC,QAAQ,SACjB,oGACA,SACAC,EAAEC,KAAKC,WAAW,SAAU,eAAe,WAElBC,cAAKC,KAAK,CAAC,CAC5BC,WAAY,uBACZC,KAAM,CACFV,GAAIA,OAIG,GAAGW,MAAK,SAAUC,SACd,OAAXA,QACAE,SAASC,SAETF,MAAMD,YAEXI,MAAK,WACJH,MAAM,qFApCpB,oBAAoBf,0BACpB,oBAAoBC,GAAG,SAAS,eAC1BC,IAAK,mBAAEC,MAAMC,KAAK,MAClBe,QAAS,mBAAE,WAAWC,MAE1BC,OAAOL,SAASM,KAAOhB,EAAEiB,IAAIC,QAAU,kCAAoCtB,GAAK,WAAaiB,8BAuC/F,yBAAyBnB,0BACzB,yBAAyByB,OAAM,+BAC3B,kCAAkCC,KAAK,WAAW,0BAGtD,2BAA2BD,OAAM,+BAC7B,kCAAkCC,KAAK,WAAW,0BAKtD,sBAAsB1B,0BACtB,sBAAsByB,OAAM,+BACxBtB,MAAMwB,KAAK,iDACX,0CAA0CC,MAAK,WAC7CC,QAAQC,KAAI,mBAAE3B,MAAMC,KAAK,OACDK,cAAKC,KAAK,CAAC,CAC/BC,WAAY,wBACZC,KAAM,CACFV,IAAI,mBAAEC,MAAMC,KAAK,UAGP,GAAGS,MAAK,SAAUC,SACjB,GAAXA,SAGAC,MAAMD,YAEXI,MAAK,SAAUa,GACdF,QAAQC,IAAIC,GACZhB,MAAM,oFAKZZ,MAAMwB,KAAK"}