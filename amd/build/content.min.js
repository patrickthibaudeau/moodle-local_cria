define("local_cria/content",["exports","jquery","core/notification","core/ajax"],(function(_exports,_jquery,_notification,_ajax){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_jquery=_interopRequireDefault(_jquery),_notification=_interopRequireDefault(_notification),_ajax=_interopRequireDefault(_ajax);_exports.init=()=>{(0,_jquery.default)(".delete-content").off(),(0,_jquery.default)(".delete-content").on("click",(function(){var id=(0,_jquery.default)(this).data("id");_notification.default.confirm("Delete","Are you sure you want to delete this content? It cannot be recovered","Delete",M.util.get_string("cancel","local_cria"),(function(){_ajax.default.call([{methodname:"cria_content_delete",args:{id:id}}])[0].done((function($result){200==$result||alert($result+" The file could not be found on the criadex server. However, the database link to the file has been deleted."),location.reload()})).fail((function(){alert("An error has occurred. The record was not deleted")}))}))})),(0,_jquery.default)(".delete-question").off(),(0,_jquery.default)(".delete-question").on("click",(function(){var id=(0,_jquery.default)(this).data("id");_notification.default.confirm("Delete","Are you sure you want to delete this question? The question and all examples cannot be recovered.","Delete",M.util.get_string("cancel","local_cria"),(function(){_ajax.default.call([{methodname:"cria_question_delete",args:{id:id}}])[0].done((function($result){location.reload()})).fail((function(){alert("An error occured, the question could not be deleted.")}))}))})),(0,_jquery.default)(".btn-edit-intent").off(),(0,_jquery.default)(".btn-edit-intent").on("click",(function(){var id=(0,_jquery.default)(this).data("id"),bot_id=(0,_jquery.default)("#bot-id").val();window.location.href=M.cfg.wwwroot+"/local/cria/edit_intent.php?id="+id+"&bot_id="+bot_id})),(0,_jquery.default)("#select-all-questions").off(),(0,_jquery.default)("#select-all-questions").click((function(){(0,_jquery.default)("input:checkbox.question-select").prop("checked",!0)})),(0,_jquery.default)("#deselect-all-questions").click((function(){(0,_jquery.default)("input:checkbox.question-select").prop("checked",!1)})),(0,_jquery.default)(".publish-questions").off(),(0,_jquery.default)(".publish-questions").click((function(){(0,_jquery.default)("input:checkbox.question-select:checked").each((function(){let input=(0,_jquery.default)(this);_ajax.default.call([{methodname:"cria_question_publish",args:{id:(0,_jquery.default)(this).data("id")}}])[0].done((function($result){1==$result?input.remove():alert($result)})).fail((function(e){console.log(e),alert("An error occured, the question could not be published.")}))}))})),(0,_jquery.default)(".delete-all-questions").off(),(0,_jquery.default)(".delete-all-questions").click((function(){let intent_id=(0,_jquery.default)(this).data("intent_id");_notification.default.confirm("Delete","Are you sure you want to delete all questions for this category? The questions and all examples cannot be recovered.","Delete",M.util.get_string("cancel","local_cria"),(function(){_ajax.default.call([{methodname:"cria_question_delete_all",args:{intent_id:intent_id}}])[0].done((function($result){200==$result?location.reload():alert("An error occured, the questions could not be deleted.")})).fail((function(e){console.log(e),alert("An error occured, the questions could not be deleted.")}))}))})),(0,_jquery.default)("#cria-publish-all-files").click((function(){(0,_jquery.default)(this).html(""),(0,_jquery.default)(this).html('<i class="bi bi-arrow-repeat gly-spin"></i>');var intent_id=(0,_jquery.default)(this).data("intent_id");console.log(intent_id),_ajax.default.call([{methodname:"cria_content_publish_files",args:{intent_id:intent_id}}])[0].done((function($result){(0,_jquery.default)("#cria-publish-all-files").html('<i class="bi bi-cloud-upload"></i>')})).fail((function(e){console.log(e),alert("An error occured, the question could not be published.")}))}))}}));

//# sourceMappingURL=content.min.js.map