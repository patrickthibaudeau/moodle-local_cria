{"version":3,"file":"secondopinion.min.js","sources":["../src/secondopinion.js"],"sourcesContent":["import $ from 'jquery';\r\nimport ajax from 'core/ajax';\r\nimport config from 'core/config';\r\n\r\nexport const init = () => {\r\n    process_notes();\r\n};\r\n\r\n/**\r\n * Delete a content\r\n */\r\nfunction process_notes() {\r\n\r\n    $(\"#process-notes\").off();\r\n    $(\"#process-notes\").on('click', function () {\r\n        $('#cria-cost').hide();\r\n        var bot_id = $(this).data('bot_id');\r\n        var language = $('#language').val();\r\n        var content = 'rubric:' + $('#rubric').val() + '\\n' + 'assignment:' + $('#assignment').val();\r\n        var voice = $('input[name=voice]:checked').val();\r\n        var paraphrase = $('#paraphrase').val();\r\n\r\n        // Make ajax call to get bot user prompt\r\n        var bot_prompt_response = ajax.call([{\r\n            methodname: 'cria_get_bot_prompt',\r\n            args: {\r\n                bot_id: bot_id,\r\n            }\r\n        }]);\r\n        // get bot user prompt results\r\n        bot_prompt_response[0].done(function (result) {\r\n            let prompt = '[INSTRUCTIONS]';\r\n            prompt += result;\r\n            prompt += '[/INSTRUCTIONS]';\r\n\r\n            // Now that we have the prompt, make the call to GPT for results\r\n            $('#process-notes').hide();\r\n            $('#starting-process').show();\r\n            //Delete the record\r\n            var gpt_response = ajax.call([{\r\n                methodname: 'cria_get_gpt_response',\r\n                args: {\r\n                    bot_id: bot_id,\r\n                    chat_id: 0,\r\n                    prompt: prompt,\r\n                    content: content\r\n                }\r\n            }]);\r\n\r\n            gpt_response[0].done(function (result) {\r\n                let data = JSON.parse(result);\r\n\r\n                $('#starting-process').hide();\r\n                $('#almost-done').show();\r\n                // JQuery Ajax call to process.php\r\n                setTimeout(function () {\r\n                    $('#almost-done').hide();\r\n                    $('#process-notes').show();\r\n                    $('#cria-cost').html('$' + data.cost.toPrecision(6));\r\n                    $('#cria-translation-container').html(data.message);\r\n                    $('#cria-cost').show();\r\n                }, 2000);\r\n\r\n            }).fail(function () {\r\n                alert('An error has occurred.');\r\n            });\r\n        }).fail(function () {\r\n            alert('An error has occurred. Prompt was not returned properly');\r\n        });\r\n\r\n        console.log(prompt);\r\n\r\n    });\r\n}"],"names":["off","on","hide","bot_id","this","data","content","val","ajax","call","methodname","args","done","result","prompt","show","chat_id","JSON","parse","setTimeout","html","cost","toPrecision","message","fail","alert","console","log"],"mappings":"4ZAIoB,yBASd,kBAAkBA,0BAClB,kBAAkBC,GAAG,SAAS,+BAC1B,cAAcC,WACZC,QAAS,mBAAEC,MAAMC,KAAK,UAEtBC,UADW,mBAAE,aAAaC,MAChB,WAAY,mBAAE,WAAWA,MAAzB,iBAAwD,mBAAE,eAAeA,QAC3E,mBAAE,6BAA6BA,OAC1B,mBAAE,eAAeA,MAGRC,cAAKC,KAAK,CAAC,CACjCC,WAAY,sBACZC,KAAM,CACFR,OAAQA,WAII,GAAGS,MAAK,SAAUC,YAC9BC,OAAS,iBACbA,QAAUD,OACVC,QAAU,sCAGR,kBAAkBZ,2BAClB,qBAAqBa,OAEJP,cAAKC,KAAK,CAAC,CAC1BC,WAAY,wBACZC,KAAM,CACFR,OAAQA,OACRa,QAAS,EACTF,OAAQA,OACRR,QAASA,YAIJ,GAAGM,MAAK,SAAUC,YACvBR,KAAOY,KAAKC,MAAML,4BAEpB,qBAAqBX,2BACrB,gBAAgBa,OAElBI,YAAW,+BACL,gBAAgBjB,2BAChB,kBAAkBa,2BAClB,cAAcK,KAAK,IAAMf,KAAKgB,KAAKC,YAAY,wBAC/C,+BAA+BF,KAAKf,KAAKkB,6BACzC,cAAcR,SACjB,QAEJS,MAAK,WACJC,MAAM,gCAEXD,MAAK,WACJC,MAAM,8DAGVC,QAAQC,IAAIb"}