{"version":3,"file":"secondopinion.min.js","sources":["../src/secondopinion.js"],"sourcesContent":["import $ from 'jquery';\nimport ajax from 'core/ajax';\nimport config from 'core/config';\n\nexport const init = () => {\n    process_notes();\n};\n\n/**\n * Delete a content\n */\nfunction process_notes() {\n\n    $(\"#process-notes\").off();\n    $(\"#process-notes\").on('click', function () {\n        $('#cria-cost').hide();\n        var bot_id = $(this).data('bot_id');\n        var language = $('#language').val();\n        var content = 'rubric:' + $('#rubric').val() + '\\n' + 'assignment:' + $('#assignment').val();\n        var voice = $('input[name=voice]:checked').val();\n        var paraphrase = $('#paraphrase').val();\n\n        // Make ajax call to get bot user prompt\n        var bot_prompt_response = ajax.call([{\n            methodname: 'cria_get_bot_prompt',\n            args: {\n                bot_id: bot_id,\n            }\n        }]);\n        // get bot user prompt results\n        bot_prompt_response[0].done(function (result) {\n            let prompt = '[INSTRUCTIONS]';\n            prompt += result;\n            prompt += '[/INSTRUCTIONS]';\n\n            // Now that we have the prompt, make the call to GPT for results\n            $('#process-notes').hide();\n            $('#starting-process').show();\n            //Delete the record\n            var gpt_response = ajax.call([{\n                methodname: 'cria_get_gpt_response',\n                args: {\n                    bot_id: bot_id,\n                    chat_id: 0,\n                    prompt: prompt,\n                    content: content\n                }\n            }]);\n\n            gpt_response[0].done(function (result) {\n                $('#starting-process').hide();\n                $('#almost-done').show();\n                // JQuery Ajax call to process.php\n                setTimeout(function () {\n                    $('#almost-done').hide();\n                    $('#process-notes').show();\n                    $('#cria-cost').html('$' + result.cost.toPrecision(6));\n                    $('#cria-translation-container').html(result.message);\n                    $('#cria-cost').show();\n                }, 2000);\n\n            }).fail(function () {\n                alert('An error has occurred.');\n            });\n        }).fail(function () {\n            alert('An error has occurred. Prompt was not returned properly');\n        });\n\n        console.log(prompt);\n\n    });\n}"],"names":["off","on","hide","bot_id","this","data","content","val","ajax","call","methodname","args","done","result","prompt","show","chat_id","setTimeout","html","cost","toPrecision","message","fail","alert","console","log"],"mappings":"4ZAIoB,yBASd,kBAAkBA,0BAClB,kBAAkBC,GAAG,SAAS,+BAC1B,cAAcC,WACZC,QAAS,mBAAEC,MAAMC,KAAK,UAEtBC,UADW,mBAAE,aAAaC,MAChB,WAAY,mBAAE,WAAWA,MAAzB,iBAAwD,mBAAE,eAAeA,QAC3E,mBAAE,6BAA6BA,OAC1B,mBAAE,eAAeA,MAGRC,cAAKC,KAAK,CAAC,CACjCC,WAAY,sBACZC,KAAM,CACFR,OAAQA,WAII,GAAGS,MAAK,SAAUC,YAC9BC,OAAS,iBACbA,QAAUD,OACVC,QAAU,sCAGR,kBAAkBZ,2BAClB,qBAAqBa,OAEJP,cAAKC,KAAK,CAAC,CAC1BC,WAAY,wBACZC,KAAM,CACFR,OAAQA,OACRa,QAAS,EACTF,OAAQA,OACRR,QAASA,YAIJ,GAAGM,MAAK,SAAUC,4BACzB,qBAAqBX,2BACrB,gBAAgBa,OAElBE,YAAW,+BACL,gBAAgBf,2BAChB,kBAAkBa,2BAClB,cAAcG,KAAK,IAAML,OAAOM,KAAKC,YAAY,wBACjD,+BAA+BF,KAAKL,OAAOQ,6BAC3C,cAAcN,SACjB,QAEJO,MAAK,WACJC,MAAM,gCAEXD,MAAK,WACJC,MAAM,8DAGVC,QAAQC,IAAIX"}