{"version":3,"file":"minutes_master.min.js","sources":["../src/minutes_master.js"],"sourcesContent":["import $ from 'jquery';\nimport ajax from 'core/ajax';\nimport config from 'core/config';\n\nexport const init = () => {\n    // approximate_cost();\n    process_notes();\n};\n\n/**\n * Delete a content\n */\nfunction process_notes() {\n\n    $(\"#process-notes\").off();\n    $(\"#process-notes\").on('click', function () {\n        $('#cria-cost').hide();\n        var bot_id = $(this).data('bot_id');\n        var language = $('#language').val();\n        var content = '---' + $('#notes').val() + '---' + \"\\\\n\"\n        // var prompt = `Create meeting notes from the context provided and separate the notes by topic. Each topic should be in a\n        // numbered list. Once done, create all action items from the context. Format the action items as a list having\n        // the following headings: Assigned to, Description, Date due`;\n        var prompt = `Create meeting notes from the context provided and separate the notes by topic.\n        Also identify action items from the context add add them to the action_items object\n        Return the results in the following valid JSON format:\n        @@topic_result@@\n        [\n            {\n             \"topic\": Topic name,\n             \"topic_notes: [{\"note\": \"Note 1\"}],\n             \"action_items\": [{\"assigned_to\": \"Person 1\", \"description\": \"Description 1\", \"date_due\": \"Date 1\"}],\n            }\n        ]\n        @@/topic_result@@ </ br>\n`;\n        if (language == 'fr') {\n            prompt = `Create meeting notes from the context provided in french and separate the notes by topic. \n        Also identify action items from the context. \n        Return the results in the following JSON format:\n        [\n            {\n             \"topic\": Topic name,\n             \"topic_notes: [{\"0\": \"Note 1\"}, {\"1\": \"2\"} ...],\n             \"action_items\": [{\"assigned_to\": \"Person 1\", \"description\": \"Description 1\", \"date_due\": \"Date 1\"}],\n            }\n        ]`;\n        }\n        // Get all values from various fields\n        var project_name = $('#project_name').val();\n        var date = $('#date').val();\n        var time = $('#time').val();\n        var location = $('#location').val();\n\n        $('#process-notes').hide();\n        $('#starting-process').show();\n        //Delete the record\n        var gpt_response = ajax.call([{\n            methodname: 'cria_get_gpt_response',\n            args: {\n                bot_id: bot_id,\n                chat_id: 0,\n                prompt: prompt,\n                content: content\n            }\n        }]);\n\n        gpt_response[0].done(function (result) {\n            let form_data = {\n                'project_name': project_name,\n                'date': date,\n                'time': time,\n                'location': location,\n                'minutes': result.message\n            };\n            console.log(result);\n            console.log(form_data);\n            $('#starting-process').hide();\n            $('#almost-done').show();\n            // JQuery Ajax call to process.php\n            setTimeout(function () {\n                $('#almost-done').hide();\n                $('#process-complete').show();\n                $.post(config.wwwroot + \"/local/cria/plugins/minutes_master/process.php\", form_data, function (response) {\n                    let path_data = JSON.parse(response);\n                    window.location.href = config.wwwroot + \"/local/cria/plugins/minutes_master/download.php?path=\"\n                        + path_data.path + \"&file=\" + path_data.file_name;\n                    setTimeout(function () {\n                        $('#cria-cost').show();\n                        $('#cria-cost').html('$' + result.cost.toPrecision(6));\n                        $('#process-complete').hide();\n                        $('#process-notes').show();\n                    }, 1500);\n                });\n            }, 2000);\n\n\n            $('#cria-message').html(data.message);\n            // $('#cria-prompt-tokens').html(data.prompt_tokens);\n            // $('#cria-completion-tokens').html(data.completion_tokens);\n            // $('#cria-total-tokens').html(data.total_tokens);\n\n        }).fail(function () {\n            alert('An error has occurred.');\n        });\n    });\n}\n\nfunction approximate_cost() {\n    $('#notes').on('change', function () {\n        var bot_id = $('#cria-bot-id').val();\n        var language = $('#language').val();\n        var content = '[CONTEXT]' + $('#notes').val() + '[/CONTEXT]'\n        var prompt = `[INSTRUCTIONS]Create meeting notes from the context provided and separate the notes by topic. Each topic should be in a \n        numbered list. Once done, create all action items from the context. Format the action items as a list having \n        the following headings: Assigned to, Description, Date due[/INSTRUCTIONS]`;\n        if (language == 'fr') {\n            prompt = `[INSTRUCTIONS]Créez des notes de réunion à partir du context et séparez les notes par sujet. Chaque sujet doit être dans une \n            liste numérotée. Une fois terminé, créez toutes les tâches à partir de la transcription. Formatez les \n            tâches comme une list ayant les entêtes suivantes: Assigné à, Description, Date d'échéance[/INSTRUCTIONS]`;\n        }\n\n        var gpt_response = ajax.call([{\n            methodname: 'cria_get_approximate_cost',\n            args: {\n                bot_id: bot_id,\n                prompt: prompt,\n                content: content\n            }\n        }]);\n\n        gpt_response[0].done(function (result) {\n            let data = JSON.parse(result);\n            $('#cria-aprox-cost').html('Approximate cost: $' + data.cost.toPrecision(6));\n            $('#cria-aprox-cost').show();\n        });\n\n    });\n}"],"names":["off","on","hide","bot_id","this","data","language","val","content","prompt","project_name","date","time","location","show","ajax","call","methodname","args","chat_id","done","result","form_data","message","console","log","setTimeout","post","config","wwwroot","response","path_data","JSON","parse","window","href","path","file_name","html","cost","toPrecision","fail","alert"],"mappings":"6ZAIoB,yBAUd,kBAAkBA,0BAClB,kBAAkBC,GAAG,SAAS,+BAC1B,cAAcC,WACZC,QAAS,mBAAEC,MAAMC,KAAK,UACtBC,UAAW,mBAAE,aAAaC,MAC1BC,QAAU,OAAQ,mBAAE,UAAUD,MAApB,SAIVE,gjBAaY,MAAZH,WACAG,meAYAC,cAAe,mBAAE,iBAAiBH,MAClCI,MAAO,mBAAE,SAASJ,MAClBK,MAAO,mBAAE,SAASL,MAClBM,UAAW,mBAAE,aAAaN,0BAE5B,kBAAkBL,2BAClB,qBAAqBY,OAEJC,cAAKC,KAAK,CAAC,CAC1BC,WAAY,wBACZC,KAAM,CACFf,OAAQA,OACRgB,QAAS,EACTV,OAAQA,OACRD,QAASA,YAIJ,GAAGY,MAAK,SAAUC,YACvBC,UAAY,cACIZ,kBACRC,UACAC,cACIC,iBACDQ,OAAOE,SAEtBC,QAAQC,IAAIJ,QACZG,QAAQC,IAAIH,+BACV,qBAAqBpB,2BACrB,gBAAgBY,OAElBY,YAAW,+BACL,gBAAgBxB,2BAChB,qBAAqBY,uBACrBa,KAAKC,gBAAOC,QAAU,iDAAkDP,WAAW,SAAUQ,cACvFC,UAAYC,KAAKC,MAAMH,UAC3BI,OAAOrB,SAASsB,KAAOP,gBAAOC,QAAU,wDAClCE,UAAUK,KAAO,SAAWL,UAAUM,UAC5CX,YAAW,+BACL,cAAcZ,2BACd,cAAcwB,KAAK,IAAMjB,OAAOkB,KAAKC,YAAY,wBACjD,qBAAqBtC,2BACrB,kBAAkBY,SACrB,WAER,yBAGD,iBAAiBwB,KAAKjC,KAAKkB,YAK9BkB,MAAK,WACJC,MAAM"}